?legend
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4), ltw=3)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4), lwd=3)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4), lwd=2)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4), lwd=1)
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c(1,2,4), lwd=1)
png
png()
?png
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
def.off()
dev.off*()
dev.off()
dev.off()
dev.off
dev.off()
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot3.R')
?legend
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot4.R')
dev.off()
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot4.R')
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot4.R')
source('C:/Users/Eugene/Desktop/datasciencecoursera/ExData_Plotting1/plot4.R')
rm(list=ls())
library(httr)
oath_endpoints=("github")
blah=a
blah="a"
blah=21
rm(blah)
my_app <-oauth_app("github", "c68f288d8874e889bbb1", "b9f065b6d754caa0e98a33067e954a9fe8c25ae2")
github_token <- oauth2.0_token(oauth_endpoints("github"), my_app)
install.packages("sqldf")
library(sqldf)
read.csv("data")
read.csv("data.csv")
data<-read.csv("data.csv")
acs<-data
sqldf("select * from acs")
unique(acs$AGEP)
temp<-unique(acs$AGEP)
temp
sqldf("select distinct AGEP from acs")
temp2<- sqldf("select distinct AGEP from acs")
help url
?url
url("http://biostat.jhsph.edu/~jleek/contact.html")
source<-url("http://biostat.jhsph.edu/~jleek/contact.html")
con = source
htmlCode = readlines(con)
htmlCode = readLines(con)
htmlCode
nchar(htmlCode)
nchar(htmlCode)[10 20 30 100]
temp<-nchar(htmlCode)
temp[10 20 30 100]
temp[1]
temp [1 2 3]
temp [c(10, 20, 30, 100)]
file<-"data.for"
read.table("data.for")
read.table("data.for", head = true)
read.table("data.for", head = TRUE)
?read.table
read.table("data.for", head = TRUE, sep = " ")
read.fwf(file, skip = 4, widths=c(12,7,4,9,4,9,4,9,4))
data<-read.fwf(file, skip = 4, widths=c(12,7,4,9,4,9,4,9,4))
data
q
data[4,]
data[,4]
sum(data[,4])
data<-read.csv("data.csv")
View(data)
View(data)
acr=3
agriculturalLogical <- (data$ACR==3 & AGS == 6)
agriculturalLogical <- (data$ACR==3 & data$AGS == 6)
?which
which(agricultrualLogical)
which(agriculturalLoglcal)
which(agriculturalLogical)
file<-"data.jpg"
?jpg
jpg()
install.packages("jpeg")
library(jpeg)
?readjpeg
?readJPEG
readJPEG(file)
data<-readJPEG(file)
data<-readJPEG(file, native=TRUE)
quantile<-c(30,80)
quant()
?quant
?quantile
quantile(data)
quantile(data, probs=c(30,80))
quantile(data, probs=c(0,1,0.1))
quantile(data, probs=c(0.3, 0.8))
data
data<-read.csv("data.csv")
data2<-read.csv("data2.csv")
View(data)
View(data2)
data1<-read.csv("data1.csv")
View(data1)
temp<-marge(data1, data2, by.x=X, by.y=CountryCode)
?marge
temp<-merge(data1, data2, by.x=X, by.y=CountryCode)
?marge
?merge
temp<-merge(data1, data2, by.x="X", by.y="CountryCode")
?sort
order
?order
View(temp)
ordr<-order(temp$Gross.domestic.product2012)
temp$Gross.domestic.product.2012
order(temp$Gross.domestic.product.2012)
ordr<-order(temp$Gross.domestic.product.2012)
temp2<-[ordr]
temp2<-temp[ordr]
temp2<-temp[(ordr)]
temp2<-temp$X.2[ordr]
temp2
temp2(head)
head(temp2)
?read.csv
data1<-read.csv("data1.csv, header=TRUE")
data1<-read.csv("data1.csv", header=TRUE)
View(data1)
View(data1)
data1<-data1[5:235,]
View(data1)
View(data1)
View(data2)
View(data2)
temp<-merge(data1, data2, by.x="X", by.y="CountryCode")
View(temp)
?merge
ordr<-order(temp$X.3)
?order
ordr<-order(temp$X.3, decreasing=true)
ordr<-order(temp$X.3, decreasing=TRUE)
temp2<-temp$X.2[ordr]
temp2[13]
?merge
filter1<-temp$Income.Group = "High income: OECD"
filter1<-temp$Income.Group == "High income: OECD"
filter2<-temp$Income.Group == "High income: nonOECD"
sum(filter1)
sum(filter2)
average(temp$Gross.domestic.product.2012[filter1])
avg(temp$Gross.domestic.product.2012[filter1])
?average
?avg
?mean
mean(temp$Gross.domestic.product.2012[filter1])
mean(as.numeric(temp$Gross.domestic.product.2012[filter1]))
mean(as.numeric(temp$Gross.domestic.product.2012[filter2]))
rm(ls())
ls()
rm()
?rm
ls()
rm(ls)
rm(ls())
ls()
rm(ls())
rm(list=ls())
data<-read.csv("data.CSV")
NAMES(DATA)
names(Data)
names(data)
name<-names(data)
strsplit(name)
?Strsplit
?strsplit
View(data)
strsplit(data, "wgtp")
strsplit(name, "wgtp")
result<-strsplit(name,"wgtp")
result[123]
temp<-"abc.def"
strsplit(temp,".")
strsplit(temp,"\\.")
close(con)
con(close)
exit
data1<-read.csv("data1.csv")
View(data1)
rm(list=ls())
data<-read.csv("temp.csv")
View(data)
as.numeric(data$GDP)
as.numeric(as.character(data$GDP))
?gsub
temp<-gsub(",","",as.character(data$GDP))
temp
avg(as.numeric(temp))
average()
mean()
mean(as.numeric(temp))
grep("^United",data$Economy)
data
data2<-read.csv("data2")
data2<-read.csv("data2.csv")
View(data2)
?merge
data3<-merge(data, data2, by.x="code", by.y="CountryCode")
View(data3)
temp<-data3$Special.Notes
temp<-as.character(temp)
temp
grep(temp, "[Ff]iscal")
?grep
"fiscal" == "[Ff]iscal"
grep(temp, "Fiscal")
grep("[Ff]iscal", temp)
grep("[Ff]iscal", temp, value=true)
grep("[Ff]iscal", temp, value=TRUE)
temp2<-grep("[Ff]iscal", temp, value=TRUE)
temp3<-grep("[Jj]une", temp2, value=TRUE)
temp34
temp3
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn
View(amzn)
?as.date
?as.date()
as.Date()
?as.Date
dates<-as.Date(amzn$row.names, "%Y-%m-%d")
dates<-as.Date(as.character(amzn$row.names), "%Y-%m-%d")
dates
as.character(amzn$row.names)
amzn$row.names
names(amzn)
amzn[1]
amzn[[1]]
row.names(amzn)
index(amzn)
dates<-index(amzn)
dates
dates<-as.character(dates)
dates
dates<-as.date(dates, "%Y-%m-%d")
dates<-as.Date(dates, "%Y-%m-%d")
dates
months(dates)
year(dates)
?years
dates=="2012"
?dates
?date
summary(dates)
year
year(dates)
dates[1]
dates[1]-dates[2]
print(dates)
print(dates, year)
?print.date
?print.Date
grep("2012", as.character(dates))
blah<-grep("2012", as.character(dates))
weekday(dates)
weekdays(dates)
weekdays(dates)=="Monday"
sum(weekdays(dates)=="Monday")
blah<-grepl("2012", as.character(dates))
dates[blah]
weekdays(dates[blah])
weekdays(dates[blah])=="Monday"
sum(weekdays(dates[blah])=="Monday")
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
;
)
swirl()
mydf<-read.csv(path2csv, StringsAsFactors=FALSE)
?read.csv
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
print(cran)
cran
select(cran, -time)
select(cran, -X:size)
select(cran, -5:20)
select(cran, -(X:size))
select(cran, -5:20)
select(cran, -(5:20))
info()
select(cran, -(X:time))
-5:20
-(5:20)
select(cran, -(X:time))
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <="3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id
)
arrange(cran2, country, desc(r_version), ip_id)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
table_df(mydf)
tbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
submit()
?ndistinct
?n_distinct
submit()
pack_sum
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, descending(count))
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View()
View(top_unique_sorted)
submit()
submit()
submit
submit()
View(result3)
?chain
submit()
submit()
submit
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
?gather
student2
students2
res<-gather(students2, sex_class, count)
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex", "class"))
submit()
students3
?tather
?gather
studnets3
reset()
submit()
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?extract_numeric
extact_numeric("$1231.41")
extract_numeric("$1231.41")
?mutate
submit()
submit()
students3.class
students3$class
students3
submit()
%>submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status"passed")
passed<-mutate(passed,status="passed")
failed<-mutate(failed, status = "failed")
bind_rows(passed,failed)
sat
?contains
?contains
?select
?separate
submit()
submit()
?group_by
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment-now()
this_moment<-now()
this_moment
hours(this_moment)
hour(this_moment)
my_date<-ymd("1989-05-17")
my)date
my_date
class(my_date)
ymd("1989 may 17")
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(24081985)
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours - 8, minutes = 34, seconds = 55)
update(this_moment, hours  8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, current_time())
this_moment<-update(this_moment, now()
)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc<-now()
nyc<-now("America/New_York")
nyc
depart<-nyc+days(@)
depart<-nyc+days(2)
depart
depart<-update(depart, hours = 17, minutes = 34)
depart
arrive<-depart + hours(15), minutes(50)
arrive<-depart + hours(15)+ minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
rm(list=ls())
source('C:/Users/Eugene/Desktop/datasciencecoursera/Getting-and-Cleaning-Data/run_analysis.r')
setwd("c:/users/Eugene/Desktop/datasciencecoursera/Getting-and-Cleaning Data")
getwd()
source('C:/Users/Eugene/Desktop/datasciencecoursera/Getting-and-Cleaning-Data/run_analysis.r')
View(tidy)
labels<-names(tidy)
labels
write.table(labels, "codebook.txt")
write.table(labels, "codebook.txt", row.names=FALSE, quote=FALSE)
blah<-read.table("tidy.txt")
View(blah)
labels[1]
